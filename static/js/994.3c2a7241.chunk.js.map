{"version":3,"file":"static/js/994.3c2a7241.chunk.js","mappings":"sMACA,EAAwB,qBAAxB,EAAqD,qBAArD,EAAqF,wB,mBC0BrF,EAvBY,SAACA,GACT,IAAMC,EAAY,GAClB,IAAI,IAAIC,KAAOF,EAAMG,IACjBF,EAAYG,KAAK,CACbC,KAAKH,EACLI,OAAON,EAAMG,IAAID,KAGzB,OACI,iBAAKK,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACA,SAACC,EAAA,EAAD,CAAOC,MAAOV,EAAMU,MAAOC,MAAOX,EAAMW,MAAOC,MAAOZ,EAAMY,MAAOC,MAAOb,EAAMa,MAAOC,MAAM,QAAQC,OAAO,aAEhH,iBAAKR,UAAWC,EAAhB,WACI,oCAAU,4BAASR,EAAMgB,aAAaX,WACtC,0CAAgB,4BAASL,EAAMiB,WACnC,0CAAgB,4BAAShB,EAAYiB,KAAI,SAAAf,GAAG,OAAE,4BAAsBA,EAAIG,OAAS,EAAIH,EAAIE,KAAO,MAAMF,EAAIG,OAAO,MAAO,KAA1E,MAAWH,EAAIE,eAC7D,qCAAW,8BAASL,EAAMmB,MAAf,kB,0DCbbC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAID,OAJCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAEFC,kBAAkB,WACf,EAAKrB,MAAMsB,cAAc,EAAKtB,MAAMuB,MAAM,EAAKvB,MAAMwB,SACvD,EAuBA,OAvBA,8BACD,WACI,IAAIC,GAAO,SAACC,EAAA,EAAD,IAkBX,OAjBIC,KAAK3B,MAAM4B,SAAYD,KAAK3B,MAAMyB,SAClCA,EAAO,OAEPE,KAAK3B,MAAM4B,SAAWD,KAAK3B,MAAMyB,SACjCA,EAAOE,KAAK3B,MAAMyB,OAAOP,KAAI,SAAAW,GAAG,OAC5B,SAACC,EAAD,CACCX,MAAOU,EAAIV,MACZhB,IAAK0B,EAAI5B,YACTe,aAAca,EAAIb,aAClBC,KAAMY,EAAIZ,KACVP,MAAOmB,EAAInB,MACXC,MAAOkB,EAAIlB,MACXC,MAAOiB,EAAIjB,MACXC,MAAOgB,EAAIhB,OARCgB,EAAIE,QAapBN,MAEP,EA3BCL,CAAeY,EAAAA,WA6CrB,GAAeC,EAAAA,EAAAA,KAfQ,SAAAC,GACnB,MAAM,CACFT,OAAOS,EAAMC,MAAMV,OACnBG,QAAQM,EAAMC,MAAMP,QACpBL,MAAMW,EAAME,KAAKC,QACjBb,OAAOU,EAAME,KAAKZ,WAID,SAAAc,GACrB,MAAM,CACFhB,cAAc,SAACC,EAAMC,GAAP,OAAgBc,EAASC,EAAAA,GAAsBhB,EAAMC,QAI3E,EAA2DgB,EAAAA,EAAAA,GAAiBpB,EAAOqB","sources":["webpack://pizza/./src/components/Order/Order.module.css?cfb9","components/Order/Order.js","container/Orders/Orders.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Order\":\"Order_Order__8udTV\",\"Pizza\":\"Order_Pizza__-gKrU\",\"Personal\":\"Order_Personal__Kw4or\"};","import React from 'react'\r\nimport classes from './Order.module.css'\r\nimport Pizza from '../Pizza/Pizza'\r\n\r\nconst order=(props)=>{\r\n    const ingredients=[]\r\n    for(let key in props.ing){\r\n        ingredients.push({\r\n            name:key,\r\n            amount:props.ing[key]\r\n        })\r\n    }\r\n    return(\r\n        <div className={classes.Order}>\r\n            <div className={classes.Pizza}>\r\n            <Pizza type1={props.type1} type2={props.type2} type3={props.type3} type4={props.type4} width=\"200px\" height=\"200px\"/>\r\n            </div>\r\n        <div className={classes.Personal}>\r\n            <p>Name : <strong>{props.personalData.name}</strong></p>\r\n            <p>Order Date : <strong>{props.date}</strong></p>\r\n        <p>Ingredients: <strong>{ingredients.map(ing=><span key={ing.name}>{ing.amount > 0 ? ing.name + \" ( \"+ing.amount+\" ) \": null} </span>)}</strong></p>\r\n        <p>Price : <strong>{props.price} $</strong></p>\r\n        </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default order","import React,{Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from 'axios'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {connect} from 'react-redux'\r\nimport * as orderAction from '../../Store/action/index'\r\n\r\nclass Orders extends Component{\r\n  \r\n    componentDidMount=()=>{\r\n       this.props.onFetchOrders(this.props.token,this.props.userId)\r\n    }\r\n    render(){\r\n        let orders=<Loader />\r\n        if(!this.props.loading && !this.props.orders){\r\n            orders=null\r\n        }\r\n        if(!this.props.loading && this.props.orders){\r\n            orders=this.props.orders.map(ord=>(\r\n                <Order key={ord.id}\r\n                 price={ord.price}\r\n                ing={ord.ingredients}\r\n                personalData={ord.personalData}\r\n                date={ord.date}\r\n                type1={ord.type1}\r\n                type2={ord.type2}\r\n                type3={ord.type3}\r\n                type4={ord.type4}/>\r\n              ))\r\n        }\r\n\r\n        return(\r\n            orders\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state =>{\r\n    return{\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.idToken,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onFetchOrders:(token,userId)=>dispatch(orderAction.getOrders(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios))"],"names":["props","ingredients","key","ing","push","name","amount","className","classes","Pizza","type1","type2","type3","type4","width","height","personalData","date","map","price","Orders","componentDidMount","onFetchOrders","token","userId","orders","Loader","this","loading","ord","Order","id","Component","connect","state","order","auth","idToken","dispatch","orderAction","withErrorHandler","axios"],"sourceRoot":""}