{"version":3,"file":"static/js/461.ab5548e3.chunk.js","mappings":"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","sources":["webpack://pizza/./src/components/UI/Input/Input.module.css?4bac","components/UI/Input/Input.js","webpack://pizza/./src/container/Auth/auth.module.css?2e32","container/Auth/SignUp.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__ZzZM8\",\"InputInvalid\":\"Input_InputInvalid__qCfMi\"};","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst input=(props)=>{\r\n    let inputElement=''\r\n    let inputArray=[classes.Input]\r\n    switch(props.inputType){\r\n        case(\"text\"):\r\n        if(!props.valid && props.touched){\r\n            inputArray.push(classes.InputInvalid)\r\n        }\r\n        inputElement=<input className={inputArray.join(' ')}\r\n        type=\"text\" placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.changed}/>\r\n        break;\r\n\r\n        case(\"email\"):\r\n        if(!props.valid && props.touched){\r\n            inputArray.push(classes.InputInvalid)\r\n        }\r\n        inputElement=<input className={inputArray.join(' ')}\r\n        type=\"email\" placeholder={props.placeholder} \r\n        value={props.value}\r\n        onChange={props.changed}/>\r\n        break;\r\n\r\n        case(\"password\"):\r\n        if(!props.valid && props.touched){\r\n            inputArray.push(classes.InputInvalid)\r\n        }\r\n        inputElement=<input className={inputArray.join(' ')}\r\n        type=\"password\" placeholder={props.placeholder} \r\n        value={props.value}\r\n        onChange={props.changed}/>\r\n        break;\r\n        \r\n        default: inputElement=null\r\n        \r\n        return inputElement\r\n    }\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default input","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"auth_box__LYt6g\",\"auth\":\"auth_auth__goJPq\",\"btn\":\"auth_btn__u-tjP\",\"Change\":\"auth_Change__2s8n1\",\"error\":\"auth_error__+sK49\",\"active\":\"auth_active__frmA7\",\"messageError\":\"auth_messageError__SJvM-\"};","import React,{Component} from 'react'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport classes from './auth.module.css'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../Store/action/index'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass SignUp extends Component{\r\n    state={\r\n        personalData:{\r\n            email:{\r\n                inputType:'email',\r\n                placeholder:'Your E-mail',\r\n                value:'',\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                inputType:'password',\r\n                placeholder:'Your Password',\r\n                value:'',\r\n                valid:false,\r\n                touched:false\r\n            },\r\n        },\r\n        formValid:false,\r\n        isSignUp:true\r\n    }\r\n\r\n    checkValidety=(inputElement)=>{\r\n        let isValid=inputElement.value.length >0\r\n        return isValid\r\n    }\r\n\r\n    changeEventHandler=(event,inputElement)=>{\r\n        const newPersonalData={\r\n            ...this.state.personalData\r\n        }\r\n        const newInputElement={\r\n            ...newPersonalData[inputElement]\r\n        }\r\n        newInputElement.value=event.target.value\r\n        newInputElement.valid=this.checkValidety(newInputElement)\r\n        newInputElement.touched=true\r\n        newPersonalData[inputElement]=newInputElement\r\n        let newFormValid=true\r\n        for(let key in newPersonalData){\r\n            newFormValid=newPersonalData[key].valid && newFormValid\r\n        }\r\n        this.setState({\r\n            personalData:newPersonalData, formValid:newFormValid\r\n        })\r\n    }\r\n\r\n    signupHandler=(event)=>{\r\n        event.preventDefault()\r\n        this.props.onSignUp(this.state.personalData.email.value,this.state.personalData.password.value,this.state.isSignUp)\r\n    }\r\n\r\n    changeSignUpHandler=()=>{\r\n        this.setState(prevState=>{\r\n            return{isSignUp :!prevState.isSignUp}\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const dataArray=[]\r\n    for(let key in this.state.personalData){\r\n        dataArray.push({\r\n            id:key,\r\n            data:this.state.personalData[key]\r\n        })\r\n    }\r\n    let errorMessage=null\r\n    let errorClass=[classes.error]\r\n    if(this.props.error){\r\n        errorMessage=this.props.error.message\r\n        errorClass=[classes.error,classes.active]\r\n    }\r\n\r\n    let form=(\r\n        <div className={classes.auth}>\r\n        <h1>{this.state.isSignUp? \"Sign Up\" : \"Sign In\"}</h1>\r\n        <form onSubmit={this.signupHandler}>\r\n                {dataArray.map(inp=>(\r\n                    <Input key={inp.id} \r\n                    inputType={inp.data.inputType} \r\n                    value={inp.data.value} \r\n                    placeholder={inp.data.placeholder}\r\n                    valid={inp.data.valid}\r\n                    touched={inp.data.touched}\r\n                    changed={(event)=>this.changeEventHandler(event,inp.id)}/>\r\n                ))}\r\n                <button disabled={!this.state.formValid} className={classes.btn}>{this.state.isSignUp? \"Sign Up\" : \"Sign In\"}</button>\r\n                <span className={classes.Change} onClick={this.changeSignUpHandler}>Move To {this.state.isSignUp? \"Sign In\" : \"Sign Up\"}</span>\r\n            </form>\r\n            </div>\r\n    )\r\n\r\n    if(this.props.loading){\r\n        form=<Loader />\r\n    }\r\n    let direction=null\r\n    if(this.props.isAuth && !this.props.building){\r\n        direction=<Redirect to=\"/\"/>\r\n    }else if(this.props.isAuth && this.props.building){\r\n        direction=<Redirect to=\"/checkout\"/>\r\n    }\r\n\r\n  \r\n  \r\n        return(\r\n            <div className={classes.box}>\r\n            <div className={errorClass.join(' ')}>\r\n                {direction}\r\n            {errorMessage}\r\n            </div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuth:state.auth.idToken !== null,\r\n        building:state.pizza.building\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onSignUp:(email,password,isSignUp)=>dispatch(actions.signup(email,password,isSignUp))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)"],"names":["props","inputElement","inputArray","classes","inputType","valid","touched","push","className","join","type","placeholder","value","onChange","changed","SignUp","state","personalData","email","password","formValid","isSignUp","checkValidety","length","changeEventHandler","event","newPersonalData","newInputElement","target","newFormValid","key","setState","signupHandler","preventDefault","onSignUp","changeSignUpHandler","prevState","dataArray","this","id","data","errorMessage","errorClass","error","message","form","onSubmit","map","inp","Input","disabled","onClick","loading","Loader","direction","isAuth","building","to","Component","connect","auth","idToken","pizza","dispatch","actions"],"sourceRoot":""}